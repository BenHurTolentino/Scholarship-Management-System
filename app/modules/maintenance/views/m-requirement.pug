extends ../../../templates/masterpanel

block content
    .content
        .row
            .col-md-12
                .card
                    .card-header
                        h4.card-title  List of Requirements &nbsp;
                            button.btn.btn-fab.btn-icon.btn-round(data-toggle="modal" data-target="#addModal")
                                i.fa.fa-plus

                    |               
                    .card-body
                        .table-responsive
                            table#example.table.table-striped.table-bordered
                                // Classic Modal
                                #addModal.modal.fade(tabindex="-1", role="dialog", aria-labelledby="ModalLabel", aria-hidden="true")
                                    .modal-dialog
                                        .modal-content
                                            .modal-header.justify-content-center
                                                button.close(type="button", data-dismiss="modal", aria-label="Close")
                                                    i.nc-icon.nc-simple-remove
                                                |                             
                                                h4.title.title-up Add Requirement                           
                                            
                                            form#add(method='POST', action='/maintenance/requirement', style="display: none;")
                                                .modal-body
                                                    .form-group
                                                        h6.form-text.text-muted(for="requirement") Requirement
                                                        |     
                                                        input#requirement.form-control(name="requirement", type="string", placeholder="Enter requirement", maxLength="40", required)
                                                        
                                                .modal-footer
                                                    .left-side
                                                        button.btn.btn-default.btn-link(type="reset") Reset
                                                    |                             
                                                    .divider
                                                    |                             
                                                    .right-side
                                                        button.btn.btn-link(type="submit") Submit
                                // End Modal
                                thead
                                    tr
                                        th Requirement
                                        th Status                     
                                        th.text-right
                                            | Actions
                                |                     
                                tbody
                                    each requirement in requirements
                                        tr
                                            td #{requirement.strRequirementDesc}
                                            td.text-center 
                                                if requirement.isActive == 0
                                                    input(type="checkbox" class="clam" data-toggle="toggle" data-on="Active" data-off="Inactive" value=requirement.intRequirementId)
                                                else
                                                    input(type="checkbox" class="clam" data-toggle="toggle" data-on="Active" checked data-off="Inactive" value=requirement.intRequirementId)
                                            td.text-right                   
                                                button.btn.btn-success.btn-icon.btn-round.btn-sm(class="edit" data-id=requirement data-toggle="modal" data-target="#editModal", type="button", title="Edit")
                                                    i.fa.fa-edit
                                                // Classic Modal
                                                #editModal.modal.fade(tabindex="-1", role="dialog", aria-labelledby="ModalLabel", aria-hidden="true")
                                                    .modal-dialog
                                                        .modal-content
                                                            .modal-header.justify-content-center
                                                                button.close(type="button", data-dismiss="modal", aria-label="Close")
                                                                    i.nc-icon.nc-simple-remove
                                                                |                             
                                                                h4.title.title-up Edit requirement
                                                            form#edit(method='POST', action='/maintenance/requirement?_method=PUT', style="margin-bottom: -1px;")
                                                                .modal-body
                                                                    .form-group
                                                                        h6.form-text.text-muted(for="requirementE") Requirement 
                                                                        |     
                                                                        input#requirementE.form-control(name="requirement", type="string", placeholder="Enter new requirement", maxLength="40", required)
                                                                    input.form-control(type="hidden" name="RId" id="RId" value='')
                                                                .modal-footer
                                                                    .left-side
                                                                        button.btn.btn-default.btn-link(type="reset") Reset
                                                                    |                             
                                                                    .divider
                                                                    |                             
                                                                    .right-side
                                                                        button#edit.btn.btn-link(type="submit") Save Changes
                                                // End Modal

                                                |                           
                                                button#delete.btn.btn-danger.btn-icon.btn-round.btn-sm(data-id=requirement.intRequirementId, title="Delete")
                                                    i.fa.fa-trash
                            
    footer.footer.footer-black.footer-white
        .container-fluid
            .row
                
                .credits.ml-auto
                    span.copyright
                        | Â© &nbsp;
                        script.
                            document.write(new Date().getFullYear())
                        | , made with 
                        i.fa.fa-heart.heart
                        |  by Scholarship Management Team


    script.
        $(document).ready(function() {
                $('#example').DataTable({
                    responsive:true
                });
            });
        $(document).on('click',".edit",function(){
                var myRId = $(this).data('id');
                $('.modal-body #RId').val(myRId.intRequirementId);
                $('#requirementE').val(myRId.strRequirementDesc);
            });

        $('.clam').change(function(){
            if($(this).is(':checked')){
                console.log("true");
                var student = $(this).val();
                $.ajax({
                    url:'/maintenance/query/active',
                    type: 'POST',
                    data: {table:'tblrequirements',state:1,column:'intRequirementId',Id:student},
                    dataType: 'json',
                        success: function(res){
                            console.log(res);
                        }
                })
            }
            else{
                console.log("false");
                var student = $(this).val();
                $.ajax({
                    url:'/maintenance/query/active',
                    type: 'POST',
                    data: {table:'tblrequirements',state:0,column:'intRequirementId',Id:student},
                    dataType: 'json',
                        success: function(res){
                            console.log(res);
                        }
                }) 
            }
        })



        $('form#add').submit(function(e){
                e.preventDefault();
                $.ajax({
                    url: '/maintenance/requirement',
                    method: 'post',
                    data: $('form#add').serialize(),
                    success: function(response){
                        console.log(response);
                        if(response == 'success'){
                            swal(
                            'Added!',
                            'A new Requirement is added.',
                            'success'
                            ).then(function(){
                                location.reload();
                            })
                        }
                        else if(response.sqlMessage.includes('strRequirementDesc_UNIQUE')){
                            $.toast({
                                heading: 'ERROR',
                                text:'Existing Requirement Record',
                                icon:'error',
                                position: 'top-right',
                                loader: false,
                                stack : 3
                            })
                        }
                    }
                })
            })
            $('form#edit').submit(function(e){
                e.preventDefault();
                $.ajax({
                    url: '/maintenance/requirement',
                    method: 'put',
                    data: $(this).serialize(),
                    success: function(response){
                        console.log(response);
                        if(response == 'success'){
                            swal(
                            'Updated!',
                            'Requirement Updated.',
                            'success'
                            ).then(function(){
                                location.reload();
                            })
                        }
                        else if(response.sqlMessage.includes('strRequirementDesc_UNIQUE')){
                            $.toast({
                                heading: 'ERROR',
                                text:'Existing Requirement Record',
                                icon:'error',
                                position: 'top-right',
                                loader: false,
                                stack : 3
                            })
                        }
                    }
                })           
            })
        $('button#delete').click(function(){
                    var requirement = $(this).data('id');
                swal({
                    title: 'Are you sure?',
                    text: "This requirement will be remove.",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#62698e',
                    cancelButtonColor: '#ef8157',
                    confirmButtonText: 'Yes, remove it!'
                }).then(function() {
                    $.ajax({
                    url: '/maintenance/query/delete',
                    method: 'post',
                    data: {table:'tblrequirements',column:'intRequirementId',Id:requirement},
                    success: function(response){
                        console.log(response);
                        if(response=='success'){
                            swal(
                            'Removed!',
                            'This Requirement has been removed.',
                            'success'
                            ).then(function(){
                                window.location=`/maintenance/requirement`;
                            })
                        }
                        else if(response.sqlMessage.includes('foreign key')){
                            $.toast({
                                heading: 'ERROR',
                                text:'This Record is Used',
                                icon:'error',
                                position: 'top-right',
                                loader: false,
                                stack : 3
                            })  
                        }
                    }
                })
                })

                })
                $(document).ready(function(){
                    var sms = $(this);
                    $('#maintenan').addClass('active');
                    if(sms.hasClass('show')){
                        $('#maintenance.collapse').slideDown('slow','swing').removeClass('show');
                    } else{
                        $('#maintenance.collapse').slideUp('slow','swing').addClass('show');
                    }
                    $('#scholar').addClass('active');
                    $('#Scholarship.collapse').addClass('show');
                    $('#requirements').addClass('active');
                })